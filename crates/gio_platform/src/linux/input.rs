use x11_dl::xlib::KeySym;

use crate::common::{keycode, mouse};

#[allow(non_upper_case_globals)]
pub fn get_key_from_keysym(symbol: KeySym) -> usize {
    // clang-format off
    match symbol as u32 {
        XK_Shift_L => keycode::LSHIFT,
        XK_Shift_R => keycode::RSHIFT,
        XK_Control_L => keycode::LCONTROL,
        XK_Control_R => keycode::RCONTROL,
        XK_Alt_L => keycode::LALT,
        XK_Alt_R => keycode::RALT,
        XK_Super_L => keycode::LSYSTEM,
        XK_Super_R => keycode::RSYSTEM,
        XK_Menu => keycode::MENU,
        XK_Escape => keycode::ESCAPE,
        XK_semicolon => keycode::SEMICOLON,
        XK_slash => keycode::SLASH,
        XK_equal => keycode::EQUAL,
        XK_minus => keycode::HYPHEN,
        XK_bracketleft => keycode::LBRACKET,
        XK_bracketright => keycode::RBRACKET,
        XK_comma => keycode::COMMA,
        XK_period => keycode::PERIOD,
        XK_apostrophe => keycode::QUOTE,
        XK_backslash => keycode::BACKSLASH,
        XK_grave => keycode::TILDE,
        XK_space => keycode::SPACE,
        XK_Return => keycode::ENTER,
        XK_KP_Enter => keycode::ENTER,
        XK_BackSpace => keycode::BACKSPACE,
        XK_Tab => keycode::TAB,
        XK_Prior => keycode::PAGEUP,
        XK_Next => keycode::PAGEDOWN,
        XK_End => keycode::END,
        XK_Home => keycode::HOME,
        XK_Insert => keycode::INSERT,
        XK_Delete => keycode::DELETE,
        XK_KP_Add => keycode::ADD,
        XK_KP_Subtract => keycode::SUBTRACT,
        XK_KP_Multiply => keycode::MULTIPLY,
        XK_KP_Divide => keycode::DIVIDE,
        XK_Pause => keycode::PAUSE,
        XK_F1 => keycode::F1,
        XK_F2 => keycode::F2,
        XK_F3 => keycode::F3,
        XK_F4 => keycode::F4,
        XK_F5 => keycode::F5,
        XK_F6 => keycode::F6,
        XK_F7 => keycode::F7,
        XK_F8 => keycode::F8,
        XK_F9 => keycode::F9,
        XK_F10 => keycode::F10,
        XK_F11 => keycode::F11,
        XK_F12 => keycode::F12,
        XK_F13 => keycode::F13,
        XK_F14 => keycode::F14,
        XK_F15 => keycode::F15,
        XK_Left => keycode::LEFT,
        XK_Right => keycode::RIGHT,
        XK_Up => keycode::UP,
        XK_Down => keycode::DOWN,
        XK_KP_Insert => keycode::NUMPAD_0,
        XK_KP_End => keycode::NUMPAD_1,
        XK_KP_Down => keycode::NUMPAD_2,
        XK_KP_Page_Down => keycode::NUMPAD_3,
        XK_KP_Left => keycode::NUMPAD_4,
        XK_KP_Begin => keycode::NUMPAD_5,
        XK_KP_Right => keycode::NUMPAD_6,
        XK_KP_Home => keycode::NUMPAD_7,
        XK_KP_Up => keycode::NUMPAD_8,
        XK_KP_Page_Up => keycode::NUMPAD_9,
        XK_a => keycode::_A,
        XK_b => keycode::_B,
        XK_c => keycode::_C,
        XK_d => keycode::_D,
        XK_e => keycode::_E,
        XK_f => keycode::_F,
        XK_g => keycode::_G,
        XK_h => keycode::_H,
        XK_i => keycode::_I,
        XK_j => keycode::_J,
        XK_k => keycode::_K,
        XK_l => keycode::_L,
        XK_m => keycode::_M,
        XK_n => keycode::_N,
        XK_o => keycode::_O,
        XK_p => keycode::_P,
        XK_q => keycode::_Q,
        XK_r => keycode::_R,
        XK_s => keycode::_S,
        XK_t => keycode::_T,
        XK_u => keycode::_U,
        XK_v => keycode::_V,
        XK_w => keycode::_W,
        XK_x => keycode::_X,
        XK_y => keycode::_Y,
        XK_z => keycode::_Z,
        XK_0 => keycode::_0,
        XK_1 => keycode::_1,
        XK_2 => keycode::_2,
        XK_3 => keycode::_3,
        XK_4 => keycode::_4,
        XK_5 => keycode::_5,
        XK_6 => keycode::_6,
        XK_7 => keycode::_7,
        XK_8 => keycode::_8,
        XK_9 => keycode::_9,
        _ => keycode::UNKNOWN,
    }
    // clang-format on
}

#[allow(non_upper_case_globals)]
pub fn get_mouse_button(detail: u32) -> usize {
    match detail {
        Button1 => mouse::BUTTON_LEFT,
        Button2 => mouse::BUTTON_MIDDLE,
        Button3 => mouse::BUTTON_RIGHT,
        8 => mouse::BUTTON_EXTRA_1,
        9 => mouse::BUTTON_EXTRA_2,
        _ => mouse::BUTTON_UNKNOWN,
    }
}
